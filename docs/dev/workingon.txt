Small Stories
=============

- Faster occurrence finding; long time for re matching
- Renaming occurrences in strings and comments
- Encapsulating field in the defining class
- Problem finding start of block when there are generator expressions
  containing for or if at the start of line

* Long rename in hierarchy; it compiles all files; pycore needs refactorings
* Validating callinfo
* Codeassist only shows saved data
* ObjectDB after change method signature
* New modules?:

  * `rope.base.args` or `rope.base.callcontext`:
    Should hold `Arguments`, `ObjectArguments` and `_CallContext`
  * `rope.base.observer` or `rope.base.resource_observer`:
    Should hold `ResourceObserver` and `FilteredResourceObserver`


Remaining Small Stories
=======================

Base:

* Adding configs for specifying long imports?
* Changing method to static method refactoring
* Profiling before ``0.5rc1`` for occurrence finding and SOI
* Multiple ropes on one project; problems for objectdb and history
* Adding *clear objectdb* command
* Inline fails when there is an arg mismatch
* Evaluate function parameter defaults in staticoi?
* Recursive SOI; Go where the calls go
* ``match_when_unsure`` project config?
* Adding ``do when unsure`` config to all refactorings?
* Removing ``pass`` when introducing factory for empty classes
* `__setslice__` for per name information?
* Sorting names in from import list
* When running `inlinetest` modules we get
  ``Exception exceptions.SystemError: 'error return without exception set'
    in <generator object at 0xb7173aec> ignored``
* Only saving diffs in `ChangeContents`
* Importing star and removing self imports; stack overflow
* `PyClass.superclasses` should be concluded data
* Handling `AssList` for inline variable and encapsulate field
* Import addition when adding a relative to an absolute import

UI and IDE:

* Renaming normal files, folder, modules, and packages in project tree view
* Spell checking on python source
* Completion in module entries
* A completing text widget for dialogs; `Completing(name, list, handle)`
* Goto definition for ``"# comment.\na_var"``
* Comments should be indented
* Decide when to use `difflib` in `Editor.set_text()` based on the
  number of changes

Docs:

* Document how to move fields
* Describe why rope does not stop the user from performing wrong
  refactorings

Others:

* Separating UI and functional tests from unit tests
* Better `ropetest` package structure
