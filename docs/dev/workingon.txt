Small Stories
=============

- Not relying on ``self`` name in extract
- Handling `staticmethod` in extract method
- Handling `classmethod` in extract method

* Using get_method_kind wherever possible
* Using `LogicalLineFinder` in `_HoldingScopeFinder.find_scope_end()`?
* Handling strings in following lines in `patchedast`
* Split tuple assignment refactoring; ``a, b = 1, 2`` with ``a = 1\nb = 2``
  Or ``a, b = x`` with ``a = x[0]\nb = x[1]``
* Extracting subexpressions; look at `extracttest` for more info
* Create ... and implicit interfaces
* Add custom refactoring section to ``overview.txt`` file;
  Extract field refactoring
* Document restructuring UI
* Handle tuple parameters
* The ability to limit the files to restructure
* Only scanning selected region for matches
* Consider filling python source


Remaining Small Stories
=======================

Base:

* Multiple ropes on one project; problems for objectdb and history
* Inline fails when there is an arg mismatch
* Evaluate function parameter defaults in staticoi?
* Recursive SOI; Go where the calls go with limited depth
* Adding ``do when unsure`` config to all refactorings?
* Removing ``pass`` when introducing factory for empty classes
* Importing star and removing self imports; stack overflow

UI and IDE:

* Inserting common prefix when using codeassist
* Renaming normal files, folders, modules, and packages in project tree view
* Completion in module entries
* Goto definition for ``"# comment.\na_var"``
* Comments should be indented

Docs:

* More documentation for using rope as a library
* Document features and organize them
* Describe why rope does not stop the user from performing wrong
  refactorings
