Small Stories
=============

- Controlling rename in hierarchies
- Change Signature And Class Hierarchies

  - Adding a keyword argument for telling whether to search hierarchies
  - What if its not a method
  - Adding an option to the UI

- `enumerate` builtin function
- `zip` builtin function
- Renaming "refresh_project" to "validate_project"
- Handling wrong arguments to `zip`
- Adding ``!`` mark in buffer title when it is removed while editing
- Not stopping in local to field when field already exists

- Mass renaming refactoring classes

  - `ConvertLocalToFieldRefactoring` to `LocalToField`
  - `MoveRefactoring` to `Move`
  - `RenameRefactoring` to `Rename`
  - `InlineRefactoring` to `Inline`
  - `ExtractMethodRefactoring` to `ExtractMethod`
  - `ExtractVariable` to `ExtractVariable`
  - `EncapsulateFieldRefactoring` to `EncapsulateField`
  - `TransformModuleToPackage` to `ModuleToPackage`

* Reporting multiple definition problems
* Consider doing `Change`\s sometime in the future and their fields

* Showing properties in quick outline
* Docs for builtin functions and properties
* Lambdas as functions; consider their parameters
* Saving a file that does not exist; Allowing nonexistent resources
* Changing ``C-a C-a`` to move to the first character in the line
* Changing open project dialog
* Handling codetags
* Unifying builtin lists and iterators?


For ``0.5m1``
=============

* Document the renaming of refactoring classes.
* Include changes in ``setup.py`` for cheeseshop.


Remaining Small Stories
=======================

Main:

* Separating UI and functional tests from unit tests
* Goto definition for ``"# comment.\na_var"``

Others:

* Comments should be indented
* When running `inlinetest` modules we get
  ``Exception exceptions.SystemError: 'error return without exception set'
    in <generator object at 0xb7173aec> ignored``
* Only saving diffs in `ChangeContents`
* Undoing `RemoveResource`; It's not used by refactorings
* Decide when to use `difflib` in `Editor.set_text` based on the
  number of changes
* Caching calculated parameters and returned object in `PyFunction`\s
* Allowing running code to call rope functions while rope is running?
* Importing star and removing self imports; stack overflow
* Extract constant
* `PyClass.superclasses` should be concluded data
* Better `ropetest` package structure
* Handling `AssList` for inline variable and encapsulate field
* Better move dialog; complete modules names; use `editor._CompletionListHandle`
* Import addition when adding a relative to an absolute import
