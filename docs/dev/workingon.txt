Small Stories
=============

- Reducing the number of times `PyName.get_object()` gets called in
  `FilteredOccurrenceFinder`.
- Extracting ``long_description`` in ``setup.py`` from ``README.txt``
- Refactor `importutils` package

  - Rename long methods
  - Rename action names(ui, importutils, dot_rope.py, overview)

* Separate change from query in `importutils`
* Can't we use inline methon for move method?
* Using tuples instead of _Assigned
* Checking the vars and function parameters in the defining scope::

    def a_func(param):
        print param
    a_func('hey')

    class C(object):
        d = {}
        def __init__(self):
            self.d['hey'] = a_func

    d = {}
    d['hey'] = C()

* Moving `ObjectInfer.infer_assign_object()` and `evaluate_object()`
* Reporting multiple definition problems


Remaining Small Stories
=======================

Main:

* Separating UI and functional tests from unit tests
* Goto definition for ``"# comment.\na_var"``
* Showing properties in quick outline
* Docs for builtin functions and properties
* Lambdas as functions; consider their parameters
* Changing ``C-a C-a`` to move to the first character in the line
* Changing open project dialog
* Saving a file that doesn't exist; Allowing nonexistent resources

Others:

* Comments should be indented
* When running `inlinetest` modules we get
  ``Exception exceptions.SystemError: 'error return without exception set'
    in <generator object at 0xb7173aec> ignored``
* Only saving diffs in `ChangeContents`
* Undoing `RemoveResource`; It's not used by refactorings
* Decide when to use `difflib` in `Editor.set_text` based on the
  number of changes
* Caching calculated parameters and returned object in `PyFunction`\s
* Allowing running code to call rope functions while rope is running?
* Importing star and removing self imports; stack overflow
* Extract constant
* `PyClass.superclasses` should be concluded data
* Better `ropetest` package structure
* Handling `AssList` for inline variable and encapsulate field
* Better move dialog; complete modules names; use `editor._CompletionListHandle`
* Import addition when adding a relative to an absolute import
