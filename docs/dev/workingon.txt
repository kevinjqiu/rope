Incremental ObjectDB Validation
===============================

- Not saving changes about ignored resources in undo list
- What if a resource in objectdb is invalid?
- Adding *sync project to disk* command
- Add ``enable_objectdb_validation`` config

* A common base class for dbs

* Adding *clear objectdb* command
* Renaming `Project.close()` to `Project.sync()`
* Adding ``Project`` menu entry?
* Defaults and documents for project ``config.py`` options

* Inline fails when there is an arg mismatch
* `sqlite3db`
* Multiple ropes on one project; problems for objectdb and history
* Changing method to static method refactoring
* Recursive SOI; Go where the calls go
* Evaluate function parameter defaults in staticoi?
* Adding 'do when unsure' to all refactorings?
* Profiling before ``0.5rc1`` for occurrence finding and SOI


Remaining Small Stories
=======================

Base:

* Removing ``pass`` when introducing factory for empty classes
* `__setslice__` for per name information?
* Moving `Arguments`, `ObjectArguments` and `_CallContext`;
  `rope.base.args` or `callcontext` module
* Sorting names in from import list
* When running `inlinetest` modules we get
  ``Exception exceptions.SystemError: 'error return without exception set'
    in <generator object at 0xb7173aec> ignored``
* Only saving diffs in `ChangeContents`
* Importing star and removing self imports; stack overflow
* `PyClass.superclasses` should be concluded data
* Handling `AssList` for inline variable and encapsulate field
* Import addition when adding a relative to an absolute import

UI and IDE:

* Completion in module entries
* Faster find file in large projects
* A completing text widget for dialogs; `Completing(name, list, handle)`
* Goto definition for ``"# comment.\na_var"``
* Comments should be indented
* Decide when to use `difflib` in `Editor.set_text()` based on the
  number of changes

Docs:

* Document how to move fields
* Describe why rope does not stop the user from performing wrong
  refactorings

Others:

* Separating UI and functional tests from unit tests
* Better `ropetest` package structure
