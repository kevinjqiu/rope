Being A Better Library
======================

- Adding `rope.base.project.path_to_resource`

* Adding a new module? `libtools`, `library`, `libutils`, `utils`, `libhelper`, `helper`
  What to include in it?  `path_to_resource()`, `file_changed()`
* I'm not happy with `History.get_prev_contents()` in `PyCore`

* Handling strings in following lines in `patchedast`
* Using `svn` instead of `pysvn`
* Extracting subexpressions; look at `extracttest` for more info
* Create ... and implicit interfaces?
* Add custom refactoring section to ``overview.txt`` file;
  Extract field refactoring
* Handle tuple parameters?


Remaining Small Stories
=======================

Base:

* Multiple ropes on one project; problems for objectdb and history
* Inline fails when there is an arg mismatch
* Evaluate function parameter defaults in staticoi?
* Recursive SOI; Go where the calls go with limited depth
* Adding ``do when unsure`` config to all refactorings?
* Removing ``pass`` when introducing factory for empty classes
* Importing star and removing self imports; stack overflow

UI and IDE:

* Inserting common prefix when using codeassist
* Renaming normal files, folders, modules, and packages in project tree view
* Completion in module entries
* Goto definition for ``"# comment.\na_var"``
* Comments should be indented

Docs:

* More documentation for using rope as a library
* Document features and organize them
* Explain why rope does not stop users from performing wrong
  refactorings
