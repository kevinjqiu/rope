Enhancing Base
==============

- `__eq__` and `__hash__`
- Moving observers to projects to make resources immutable
- Adding `Resource.exists`
- Adding `Folder.contains`
- Per project observers
- Removing ``resource.get_parent().child_changed(...)``
- Fixing the UI; resource moving and file editor title changing

* Fix marked tests in `projecttest`
* Moving observing implementation from resources to projects
* Allowing non-existance resources?
* `Project.validate_resource`
* Using last changed time in `Project.validate_resource`
* Revalidate the whole project
* Testing svn for moving folders


Remaining Stories
=================

* Changing signature in class hierarchies
* Adding ignored file patterns in projects
* Problems for inside generator assists
* Performing actions on individual functions or imports
* `PyClass.superclasses` should be concluded data
* Better `ropetest` package structure
* Decide when to use `difflib` in `Editor.set_text`
* Handling `AssList` for inline variable and encapsulate field
* Changing `Rename` to take an `OccuranceFinder`
* ``break`` and ``continue`` in extract method

* Considering logical lines in `rope.codeanalyze`
* Reporting unhandled exceptions as error dialogs in the GUI
* Better move dialog; complete modules names; use `editor._CompletionListHandle`
* Moving/renaming current module/package
* Extract method and return statements
* Import addition when adding a relative with an absolute import
* Caching `PyCore.classes`
* Handling `Scope.lookup` for ::

    class A(object):
        a_var = 10
        another_var = a_var

* `rope.exceptions` should only contain user exceptions that are
  thrown from public classes like `Project`, `PyCore`, `Refactoring`
* Goto definition for ``"# comment.\na_var"``
