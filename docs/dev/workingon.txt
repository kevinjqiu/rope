Importing Modules In Restructuring
==================================

- Adding an ``imports`` argument to `Restructuring.get_changes()`
- Adding imports in restructuring dialog

* Helping users make less errors in the GUI
* Supporting ``$?i``
* Restructuring should be available even if no python editor is open
* Better help in restructuring dialog

* Refactor `rope.base.refactor.importutils`
* Not holding current_folder in `FromImport`?
* Performing import action on individual imports
* What to do with files that cannot be compiled when refactoring?


Small Stories
=============

* Extracting subexpressions; look at `extracttest` for more info;
  surrounding inside parenthesis?
* Remove ``change occurreces`` refactoring
* Not including dev docs on distribution packages
* Changing version format
* Using similarfinder in introduce_parameter?
* Should we move generate to refactor?
* Moving `PyCore.create_module()` and `PyCore.create_package()`? Where
  to? `libutils` maybe?
* Using `svn` instead of `pysvn`
* Create ... and implicit interfaces?
* Handling tuple parameters?
* Using GPLv3 from 0.7?


Remaining Small Stories
=======================

Base:

* Multiple ropes on one project; problems for objectdb and history
* Inline fails when there is an arg mismatch
* Evaluate function parameter defaults in staticoi?
* Recursive SOI; Go where the calls go with limited depth
* Adding ``do when unsure`` config to all refactorings?
* Removing ``pass`` when introducing factory for empty classes
* Importing star and removing self imports; stack overflow

UI and IDE:

* Inserting common prefix when using codeassist
* Renaming files, folders, modules, and packages in project tree view
* Completion in module entries
* Goto definition for ``"# comment.\na_var"``
* Comments should be indented

Docs:

* Explain why rope does not stop users from performing wrong
  refactorings
* Add custom refactoring section to ``overview.txt`` file;
  Extract field refactoring
* Document why support for Python ``2.4`` was dropped
