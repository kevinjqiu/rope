Enhancing Base
==============

- Fix marked tests in `projecttest`
- Test moving/removing and observer.removed
- Testing `Project.validate` more
- `__init__.py` should be concluded data
- Fixing modules running on windows
- `Project.validate`
- Adding a `Timekeeper` for testing
- Fixing logical line finding for deindents after multiple indents
- Calculating all changes and then performing them
- Using last changed time in `Project.validate`
- Updating changed time when resource changes
- Not calling `resource_changed` more than once for some resources
- Passing `FileSystemCommand`\s to `Project`\s
- 8 spaces per tabs in `rope.base` and `rope.refactor`

* What to do if a file is removed while editing
* A separate module for `ResourceObserver`\s
* Renaming `FilteredResourceObserver`
* Moving observing implementation from `Resource` to `Project`
* Allowing non-existent resources
* Revalidate the whole project
* Updating ``docs/dev/library.txt``


Remaining Stories
=================

* Changing signature in class hierarchies
* Adding ignored file patterns in projects
* Problems for inside generator assists
* Performing actions on individual functions or imports
* `PyClass.superclasses` should be concluded data
* Better `ropetest` package structure
* Decide when to use `difflib` in `Editor.set_text`
* Handling `AssList` for inline variable and encapsulate field
* Changing `Rename` to take an `OccuranceFinder`
* ``break`` and ``continue`` in extract method

* Considering logical lines in `rope.codeanalyze`
* Reporting unhandled exceptions as error dialogs in the GUI
* Better move dialog; complete modules names; use `editor._CompletionListHandle`
* Moving/renaming current module/package
* Extract method and return statements
* Import addition when adding a relative with an absolute import
* Caching `PyCore.classes`
* Handling `Scope.lookup` for ::

    class A(object):
        a_var = 10
        another_var = a_var

* `rope.exceptions` should only contain user exceptions that are
  thrown from public classes like `Project`, `PyCore`, `Refactoring`
* Goto definition for ``"# comment.\na_var"``
