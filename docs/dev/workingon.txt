Performing Restructurings
=========================

- Add `rope.refactor.restructure` module
- Handling name
- Adding `restruturetest` to testsuite
- Adding checks
- `task_handle` argument for `Restructure.get_changes()`
- Not patching an ast if it has already been patched
- Is `Node.sorted_children` needed?
- Handling '<>' in `patchedast`
- Better exceptions when invalid checks are given

* Should we call `pycore.resource_to_pyobject` for all modules
* The ability to limit the files to restructure

* One failure on windows!
* Caching `CodeTemplate.substitute()`?
* CheckingFinder and ``{'?a': '?b'}`` checks?
* Only scanning selected region for matches

* Restructuring UI
* Consider filling python source


Remaining Small Stories
=======================

Base:

* Better default callinfo selection
* Multiple ropes on one project; problems for objectdb and history
* Inline fails when there is an arg mismatch
* Evaluate function parameter defaults in staticoi?
* Recursive SOI; Go where the calls go with limited depth
* Adding ``do when unsure`` config to all refactorings?
* Removing ``pass`` when introducing factory for empty classes
* Importing star and removing self imports; stack overflow

UI and IDE:

* Inserting common prefix when using codeassist
* Renaming normal files, folders, modules, and packages in project tree view
* Completion in module entries
* Goto definition for ``"# comment.\na_var"``
* Comments should be indented

Docs:

* More documentation for using rope as a library
* Document features and organize them
* Describe why rope does not stop the user from performing wrong
  refactorings
