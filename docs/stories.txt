rope; A Python IDE

--- Stories ---

* Organize imports @ 2


* Add import @ 2


* Show PyDoc @ 2


* Variable indentation and tab size @ 1


* Find occurances @ 5


* Configuring keys @ 2


* Configuring fonts @ 1


* Showing syntactical errors @ 5


* Editor folding @ 4


* Having multiple clipboards @ 2


* Adding tool bar @ 1


* Commanding buffer @ 4


* Subversion support using pysvn @ 3


* Rename function @ 2


* Rename class @ 3


* Move a class to another module @ 3


* Local history @ 4


* Find matching parens @ 1


* Last edit location; C-q @ 2


* Running unit tests @ 3
  Add a graphical view for running tests.


* Open Type @ 2


* Enhance open dialog @ 1


* Replacement; M-% @ 1


* Save as and save all; C-x C-w, C-x s @ 1


* Remembering last open project @ 1


* File Encodings @ 2


* Static type inference @ 6


* Commenting and uncommenting lines @ 1


* Enhancing searching @ 1
  * End the search when some other key sequence is typed
  * C-s C-s should start the last search
  * Search history; BackSpace should go back to the matches found before
  * Starting from begining when end of file is reached
  * Showing failed searches


* Enhancing module running @ 2
  * Showing running status in the GUI
  * Printing output somewhere
  * Getting input from somewhere
  * Customizing CWD and parameters
  * Running last run


* User specified source folders @ 2
    You should save this project specific information somewhere. How should
  guessed source folders be used.


* Enhancing syntax highlighting @ 1
  * Only highlighting the changed region
  * Extend highlighting region while highlighting if necessay
  * Highlighting after cut, paste, undo and redo
  * Use Modified event for updating highlighting only when necessary


* Enhancing menu @ 1
  * Disable inaccessable items
  * Showing keyboard short-cuts in front of menu items


* Enhancing editor @ 1
  * Kill line; C-k
  * Select all; C-x h
  * Go to line
  * Fixed places for StatusTexts


* Enhancing auto indentation @ 1
  * Ignoring comment lines
  * Implicit line joining: Indenting lines whose previous line contains a ([{'''
  * Indenting a range of file
  * Removing extra spaces
  ? Separating entering and correcting indentation


* Dynamic type inference @ 3


* Rename local variable @ 2


* Changing next/prev word to stop on underline and capital letters @ 1


* Rename module refactoring @ 2


* Formating Code @ 5
  * Writing ASTs


* Better multi-sequence key event handling @ 2


* Enhancing editor @ 1
  * Clearing selection if something happens
  * Unifying builtin and emacs-style selections; if selection
    is active do the builtin cut and paste
  * Edit menu: cut, paste, undo, redo, revert
  * Showing modified file status


* Show quick outline; C-o @ 2


* Auto-completing function parameter names when calling @ 2


* Control blocks and auto-completion @ 1
  Completions for for-loop, except, lambda and with variables


* Auto completion type @ 2
  * Inserting or overwriting
  * Inserting common prefixes


* Enhancing auto-completion @ 2
  * Complete as you type (updating proposal list while typing)
  * What to do when the program has syntax errors
  * Sorting proposals


* Auto completing and comments and strings @ 2


> Public release 0.2pre2 : June 4, 2006


* Auto completion after "."s @ 3
  * Auto-completing "self."s


--- Remaining Stories ---
? Change program goals and description; principles.html
  ? Go toward refactoring and ... library rather than an IDE
? roadmap.html
? Migrating to sourceforge SVN before 0.3 release
  ? SF repository; SVN or CVS? How to synchronize local SVN with SF?
? Should workingon.txt be under version control?
? Functional tests
? Separate domain and presentation everywhere
* Logo
* Make tests less dependant
? Project resource consistency; What if it is deleted after being created.
