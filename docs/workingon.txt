* Asking whether to save modified buffers when exiting @ 4h
===========================================================

Enhancing syntax highlighting @ 16h
===================================

* Work on `Highlighting.get_suspected_region_after_change`
* Handling undo/redos
* Slow editor._get_offset

  * Caching editor._get_offset
  * Faster implementation
  * Eliminating _get_offset usage

* Slow `StatementRangeFinder`

  * get_block_starting can be used in analyze and get_suspected_range_after_change


Small Features For 0.2 Release
==============================
* Optimize SourceLinesAdapter methods
* Replace `rope.pycore._AttributeListFinder` with `rope.codeanalyze._StatementEvaluator`
* More work on WordRangeFinder._get_statment_start; merging with StatementRangeFinder?
* Having only one Refactoring instance for a project?
* PyObject and PyName equality checks; Value objects?
* Consider using `StatementRangeFinder` in highlight module?
* Better change editor dialog
* Better next/prev
* Goto definition for ``# comment.\na_var``
* Showing version in about dialog


Before 0.2 Release
==================
* Better editor changing dialog; use uihelpers module
* Profiling to find the bottlenecks
* Document features added since 0.1 release
* Add a simple tutorial


Remaining Stories
=================
* Do something for modules that can not be found
* Dotted not found modules
* GUI testing redux; make a functests directory?; rename ropetest to unittests?
* Separating ui and core modules and packages?

  * Decide which modules are the domain and which are the presentation
  * Should editing tools access Editor directly? Which of them?
  * Specifing the type of each story; UI or Core
  * Dividing week time; 5/7 for core and 2/7 for UI

* The same pattern for module names; ~ing or ~ or ~er

