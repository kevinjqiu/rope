Enhanced Import Tools
=====================

- get_import_for_pyname defined in `__init__.py` of a package

* `ImportTools.get_from_import(module, name)`
* `FromImport.expand_star(accepter)`
* `Import.remove_names` -> `Import`
* Imports that are defined in multiple lines

* Test `difflib` for `Editor.set_text`
* Caching `PyCore.classes`
* Handling `Scope.lookup` for ::
  
    class A(object):
        var = A
        another = var

* Preferring `DefinedName`\s for code assists


Remaining Stories
=================

* Transform module to package refactoring and relative imports
* `rope.exceptions` should only contain user exceptions that are
  thrown from public classes like `Project`, `PyCore`, `Refactoring`
* Eliminating `Editor.refactoring`
* Calling `sys.settrace` for all threads in `rope.runmod` module
* Adding ``show_what_rope_can_do`` file
* A keyboard shortcut for renaming local variables
* Function keywords and extract method
* Showing initial name in rename dialogs
* Faster implementation of `GlobalScope.get_inner_scope_for_line`
* Performing refactorings based on the object of the pyname
* Goto definition for ``# comment.\na_var``
* Better editor changing dialog; use uihelpers module
* Slow `GraphicalEditor._get_offset`
* Do something for modules that can not be found
* Dotted not found modules
* GUI testing redux; make a functests directory?; rename ropetest to unittests?
