Refactoring pycore and codeassist modules @ 3
=============================================

- Invaliding file cache after removal
- Imported modules should not be considered defined
- Correcting indentation on '\n ${cursor}   def f():\n    pass\n';

* From package import package
? Resource.remove_change_observer
? Folders and change_observers
* PyNames with None object
? PyObject might have additional information based on their types; visitor; checking types in many places
? Refactor pycore; So many kinds for Modules; not_found_module.is_package?
* Better Completion proposals kind to ease transformation; Names inside classes
? Not accessing pyname.object in codeassist
? PyObject equality check; Value objects
* Removing duplications in tests in codeassist and pycore scopes

* Move Project.find_module and find_package and get_source_folders to PyCore
* Move Project.create_module and create_package to PyCore
? Builtins and scopes
? We know the type of self
? We know the type of list and keyword args
? Consider using StatementRangeFinder in highlight module


Before 0.2 Release
==================
* GUI testing redux; make a ropefunctest directory; ? rename ropetest to ropeunittest
* Better editor changing dialog; use uihelpers module
* Enhancing highlighting
* Profiling to find the bottlenecks
* Document features added since release 0.1



Remaining Stories
=================
? From-import might cache module global variables
? Directories should contain __init__.py to be packages in codeassist
? Auto-completion on relative imports
? Python C extensions
? Better version number selection
? Remote pair programming support
? Separating ui modules and packages
  ? Decide which modules are the domain and which are the presentation
  ? Should editing tools access Editor directly? Which of them?
  ? Specifing the type of each story; UI or Core
? The connection between ASTs, module hierarchies and type databases

